import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as t,o as n}from"./app-8K2gpsun.js";const i={};function r(o,a){return n(),s("div",null,[...a[0]||(a[0]=[t(`<h2 id="苏欣昊的论坛-初始化" tabindex="-1"><a class="header-anchor" href="#苏欣昊的论坛-初始化"><span>苏欣昊的论坛 初始化</span></a></h2><p>package io.github.sxh705.mall.config;</p><p>import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.http.HttpHeaders; import org.springframework.web.servlet.config.annotation.CorsRegistry; import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</p><p>/**</p><ul><li><p>测试环境下允许跨域访问 */ @Configuration public class CorsConfig {</p><p>@Bean public WebMvcConfigurer corsConfigurer() { return new WebMvcConfigurer() { @Override public void addCorsMappings(CorsRegistry registry) { registry.addMapping(&quot;/**&quot;) .allowedOriginPatterns(&quot;<em>&quot;) // 允许跨域的域名，可以用</em>表示允许任何域名使用 // .allowedOrigins(&quot;http://localhost:3004/&quot;, &quot;http://localhost:7070&quot;, &quot;http://localhost:8000&quot;) // 在Springboot2.4对应Spring5.3后在设置allowCredentials(true)的基础上不能直接使用通配符设置allowedOrigins，而是需要指定特定的URL。如果需要设置通配符，需要通过allowedOriginPatterns指定 .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;DELETE&quot;, &quot;PUT&quot;) // 允许任何方法（post、get等） .allowedHeaders(&quot;*&quot;) // 允许任何请求头 .allowCredentials(true) // 带上cookie信息 .exposedHeaders(HttpHeaders.SET_COOKIE).maxAge(3600L); // maxAge(3600)表明在3600秒内，不需要再发送预检验请求，可以缓存该结果 } }; } }</p></li></ul><p>标题: SpringDoc注解解析-CSDN博客 网址: https://blog.csdn.net/qq_29012499/article/details/135433483</p><h1 id="使用springdoc" tabindex="-1"><a class="header-anchor" href="#使用springdoc"><span>使用springdoc</span></a></h1><p>springfox swagger 在springboot2.3停止更新 改为springdoc</p><p>标题: SpringBoot的API文档生成工具SpringDoc使用详解_java_脚本之家 网址: https://www.jb51.net/article/252272.htm</p><h1 id="使用webfilter" tabindex="-1"><a class="header-anchor" href="#使用webfilter"><span>使用webfilter</span></a></h1><p>一定要写dofilter语句否则filter链不会继续处理..</p><p>标题: SpringBoot 中使用 Filter 的正确姿势 - 郑晓龙 - 博客园 网址: https://www.cnblogs.com/zhengxl5566/p/13266278.html</p><h1 id="notnull-validated-注解" tabindex="-1"><a class="header-anchor" href="#notnull-validated-注解"><span>@NotNull @Validated 注解:</span></a></h1><p>需要引入pom文件:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>    &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>标题: 在方法参数上使用@NotNull |拜尔东 --- Using @NotNull on a Method Parameter | Baeldung 网址: https://www.baeldung.com/java-notnull-method-parameter</p><h1 id="故障统一处理" tabindex="-1"><a class="header-anchor" href="#故障统一处理"><span>故障统一处理:</span></a></h1><p>@RestControllerAdvice</p><p>需要引入 AOP</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;dependency&gt;</span></span>
<span class="line"><span>  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>  &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span></span>
<span class="line"><span>&lt;/dependency&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="idea快捷键" tabindex="-1"><a class="header-anchor" href="#idea快捷键"><span>IDEA快捷键</span></a></h1><p>标题: IDEA 工作中最常用的快捷键_idea怎么设置切换页签快捷键-CSDN博客 网址: https://blog.csdn.net/weixin_42139662/article/details/125126577</p><h1 id="安装javafx" tabindex="-1"><a class="header-anchor" href="#安装javafx"><span>安装javafx</span></a></h1><p>标题: 使用 jdk11 + maven 开发 JavaFX_jdk11 maven如何写-CSDN博客 网址: https://blog.csdn.net/xizi1103/article/details/104008383</p><h1 id="处理json格式" tabindex="-1"><a class="header-anchor" href="#处理json格式"><span>处理json格式:</span></a></h1><p>使用 @RequestBody注解 只对json vo对象有效 一个方法修饰只能有一个@requestbody</p><p>标题: @requestBody注解的使用 - 西风恶 - 博客园 网址: https://www.cnblogs.com/qiankun-site/p/5774300.html</p><h1 id="处理url-param格式" tabindex="-1"><a class="header-anchor" href="#处理url-param格式"><span>处理url param格式</span></a></h1><p>使用 @RequestParam注解 不论是简单对象还是VO对象</p><h1 id="sql中的-boolean转byte-byte类型不是bool类型" tabindex="-1"><a class="header-anchor" href="#sql中的-boolean转byte-byte类型不是bool类型"><span>sql中的 boolean转byte: byte类型不是bool类型</span></a></h1><p>需要约定俗成的规定, 一般认为0为false, 1为true</p><p>但是碰到多权限认证的拓展情况就会比较乏力 那时需要增加字段解决</p><p>标题: MySQL boolean类型 - MySQL教程 网址: https://www.yiibai.com/mysql/boolean.html</p><p>标题: mybatis —— 动态sql之if条件判断各种使用方式 - sumlen - 博客园 网址: https://www.cnblogs.com/sumlen/p/11130554.html</p><h1 id="mybatis-plus分页-语句后面不要加分号要不分页模块会出错" tabindex="-1"><a class="header-anchor" href="#mybatis-plus分页-语句后面不要加分号要不分页模块会出错"><span>mybatis-plus分页: 语句后面不要加分号要不分页模块会出错..</span></a></h1>`,35)])])}const d=e(i,[["render",r]]),c=JSON.parse('{"path":"/%E5%BD%92%E6%A1%A3/%E4%BC%81%E4%B8%9A/Java_%E9%A1%B9%E7%9B%AE_xhplat.html","title":"使用springdoc","lang":"en-US","frontmatter":{"feed":false,"seo":false},"git":{"createdTime":1758333160000,"updatedTime":1758333160000,"contributors":[{"name":"sxh","username":"sxh","email":"2362989228@qq.com","commits":1,"url":"https://github.com/sxh"}]},"readingTime":{"minutes":2.09,"words":628},"filePathRelative":"归档/企业/Java_项目_xhplat.md"}');export{d as comp,c as data};
